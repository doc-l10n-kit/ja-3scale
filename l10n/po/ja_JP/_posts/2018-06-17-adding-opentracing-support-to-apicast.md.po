# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-02-14 11:58+0000\n"
"PO-Revision-Date: 2021-02-14 16:55+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: to\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:6
#, no-wrap
msgid ""
"layout: post\n"
"title:  \"Adding OpenTracing support to APIcast\"\n"
"date:   2018-09-14 16:31:33 +0200\n"
"categories: istio mesh\n"
msgstr ""
"layout: post\n"
"title:  \"OpenTracingサポートをAPIcastに追加\"\n"
"date:   2018-09-14 16:31:33 +0200\n"
"categories: istio mesh\n"

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:10
#, no-wrap
msgid "Going from this:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:11
#, no-wrap
msgid ""
"[17/May/2018:14:19:02 +0000] someclient.production.gw.apicast.io:8080 10.1.13.3:36054 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 747 (0.100) 0.1\n"
"[17/May/2018:14:19:12 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:33492 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.000) 0\n"
"[17/May/2018:14:19:27 +0000] someclient.production.gw.apicast.io:8080 10.1.13.3:36874 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 747 (0.100) 0.1\n"
"[17/May/2018:14:19:37 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:34364 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.000) 0\n"
"[17/May/2018:14:20:17 +0000] someclient.production.gw.apicast.io:8080 10.1.13.3:38518 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 747 (0.100) 0\n"
"[17/May/2018:14:20:32 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:36206 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.000) 0\n"
"[17/May/2018:14:20:37 +0000] someclient.production.gw.apicast.io:8080 10.1.13.3:39170 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 747 (0.100) 0.1\n"
"[17/May/2018:14:20:47 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:36686 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.100) 0.1\n"
"[17/May/2018:14:21:02 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:37192 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.100) 0.1\n"
"[17/May/2018:14:21:22 +0000] someclient.production.gw.apicast.io:8080 10.1.5.3:37826 \"GET /?user_key=XXXXXXXXXXXXXXXXXX HTTP/1.1\" 200 746 (0.100) 0.1\n"
"\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:26
#, no-wrap
msgid "To:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:28
#, no-wrap
msgid "![jaegerUI](https://pbs.twimg.com/media/DZTOdAGW4AErUPT.jpg)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:30
#, no-wrap
msgid "Let's start by explaining what APIcast, OpenTracing and Jaeger are, and how we improved Observability of our user systems by embracing them.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:32
#, no-wrap
msgid "TL;DR: If you know what APIcast, Jaeger & OpenTracing are, you should jump to the last section :)\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:33
#, no-wrap
msgid "APIcast"
msgstr "APIcast"

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:35
#, no-wrap
msgid "APIcast (<https://github.com/3scale/apicast>) is an Opensource API Gateway with it's main focus on high performance and extensibility, is part of the Redhat 3scale API Management solution, and is used by hundreds of companies around the world to expose their APIs in a secure and controlled way.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:37
#, no-wrap
msgid "It's based on Openresty, which is a full-fledged web platform that integrates the standard Nginx core, LuaJIT and Lua Libraries with 3rd-party Nginx modules. So we have the performance and robustness of nginx with an easy way to extend/change it's functionallity by using LUA.\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:38
#, no-wrap
msgid "Improving Observability"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:41
#, no-wrap
msgid "APIcast is being deployed in multiple scenarios, but more and more, our users are deploying APIcast as the API Gateway of big and complex microservices deployments.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:43
#, no-wrap
msgid "As you can imagine, we are talking about hundreds of microservices, interacting with each other, and each external requests ends up creating several requests between services. This raises new challenges, and one of them is: \"Observability\"\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "Why this request was so slow?"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "Which service is creating those latency peaks?"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "Which services are interacting when a user hits this endpoint?"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "Why the request failed?"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "Who initiated this request?"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:50
msgid "..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:52
#, no-wrap
msgid "Right now, answering those questions is slow and complex, as the users start debuging via logs and trying to correlate everything, so we need to we need to start looking at how microservices are monitored, and distributed tracing shows up as the pattern that help us to get insight on what is going on inside the system.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:54
#, no-wrap
msgid "What is required to add distributed tracing to our microservice deployment?\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:60
msgid "Each external requests should have a unique request ID attached, usually via a HTTP header"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:60
msgid "Each service should forward the request ID to other services"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:60
msgid "Each service should output the requets ID in the logs"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:60
msgid "Each service should record additional information, like start and end time of the request."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:60
msgid "Logs will need to be aggregated somewhere, and provide a way to parse via HTTP request ID."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:62
#, no-wrap
msgid "For APIcast, that is simple, attach a unique ID as a HTTP Header and we are done...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:64
#, no-wrap
msgid "But the user will need to define a log format across all the services, what parameters to be stored in the log, the http header to use, how to capture the start/end time of each requests...correlate them, check how to do that in third party applications, try to modify those...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:67
#, no-wrap
msgid "So we ask ourselves, *Shouldn't exists a \"standard\" way of doing this?*\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:69
#, no-wrap
msgid "And that's where OpenTracing comes into scene.\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:70
#, no-wrap
msgid "OpenTracing"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:73
#, no-wrap
msgid "OpenTracing (<http://opentracing.io>) offers consistent, vendor-neutral APIs, Opensource libraries and documentation for developers to instrument and add different tracing implementations into their applications.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:75
#, no-wrap
msgid "Currently the OpenTracing project provides libraries for the following languages:\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Go"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Python"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Javascript"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Java"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "C#"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Objective-C"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "C++"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "Ruby"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:85
msgid "PHP"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:87
#, no-wrap
msgid "And there's a huge community pushing new contributions, check: <https://github.com/opentracing-contrib>.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:89
#, no-wrap
msgid "Once you have instrumented your application by adding the OpenTracing libraries, you will need to choose the tracing implementation, those are the supported one:\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Jaeger"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Appdash"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "LightStep"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Hawkular"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Instana"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Apache SkyWalking"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "inspectIT"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "stagemonitor"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:99
msgid "Datadog"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:101
#, no-wrap
msgid "We decided to go with Jaeger, as it is part of the CNF, has Openshift ready deployments <https://github.com/jaegertracing/jaeger-openshift>, and Red Hat is contributing to it.\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:103
#, no-wrap
msgid "Tracer: Jaeger"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:106
#, no-wrap
msgid "Jaeger is a distributed tracing system developed by Uber Technologies, inspired by Dapper and Openzipkin. It supports multiple storage backends, is OpenTracing native and includes a modern web UI and it's designed for performance.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:108
#, no-wrap
msgid "![Architecture Diagram](https://www.jaegertracing.io/img/architecture.png)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:110
#, no-wrap
msgid "As you can see in the diagram, the main components are:\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:116
msgid "Jaeger-client: The jaeger library that creates the spans."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:116
msgid "Jaeger-agent: Reports traces from the jaeger-client to jaeger-collector."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:116
msgid "Jaeger-collector: Centralizes traces from jaeger-agents and saves them into a storage backend."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:116
msgid "Jaeger-query: Retrieves traces from a datastore"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:116
msgid "Jaeger-ui: Jaeger UI, uses jaeger-query to get retrieve traces."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:118
#, no-wrap
msgid "Jaeger supports `Adaptative sampling`, which means that we can tune how many traces are sampled by choosing the proper `sampler`:\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:123
msgid "Constant: All traces."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:123
msgid "Probabilistic: can be adjusted from 0% to 100%"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:123
msgid "Rate Limiting: How many traces per second, for ex: 2.0 (only 2 traces per second.)"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:123
msgid "Remote: Checks with the jaeger agent which sampler to use for this service."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:125
#, no-wrap
msgid "If you want to know more about Jaeger, visit: <https://www.jaegertracing.io>\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:126
#, no-wrap
msgid "Enabling OpenTracing with Jaeger in APIcast"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:129
#, no-wrap
msgid "We packaged all the OpenTracing libraries, and the Jaeger Tracer library in the base container image of APIcast, [s2i-openresty](https://github.com/3scale/s2i-openresty) this image is [\"source-to-image\"](https://github.com/openshift/source-to-image) enabled, so you can use it as the base of your own projects.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:131
#, no-wrap
msgid "We will use [OpenShift](https://www.openshift.com), and the container image of APIcast (<https://quay.io/repository/3scale/apicast>), so we assume you have APIcast deployed on top of Openshift and your 3scale account created, if that's not the case, there's an amazing guide to get you up & running in no time here: [Using 3scale API Gateway on Red Hat OpenShift](https://github.com/3scale/apicast/blob/master/doc/openshift-guide.md)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:133
#, no-wrap
msgid "APIcast OpenTracing support is enabled/disabled using ENV vars:\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:135
msgid "OPENTRACING_TRACER: Which Tracer implementation to use, right now, only `Jaeger` is available."
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:137
msgid "OPENTRACING_CONFIG: Each tracer has a default configuration file, you can see an example here: [jaeger.example.json](https://github.com/3scale/apicast/blob/master/gateway/conf.d/opentracing/jaeger.example.json)"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:139
msgid "OPENTRACING_HEADER_FORWARD: By default, uses `uber-trace-id`, if your OpenTracing has a different configuration, you will need to change this value, if not, ignore it."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:141
#, no-wrap
msgid "In the first place let's deploy the Jager All-In-One template, this is not really meant for production environments, but for demo purposes it will be enough.\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:144
msgid "Install the Jaeger all-in-one in the current namespace:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:145
#, no-wrap
msgid "oc process -f https://raw.githubusercontent.com/jaegertracing/jaeger-openshift/master/all-in-one/jaeger-all-in-one-template.yml | oc create -f -\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:150
#, no-wrap
msgid "For more info related to deploying jaeger in a production environment: <https://github.com/jaegertracing/jaeger-openshift#production-setup>\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:152
msgid "Access the Jaeger-UI:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:153
#, no-wrap
msgid ""
"> oc get route\n"
"\n"
"NAME           HOST/PORT                                 PATH      SERVICES       PORT         TERMINATION   WILDCARD\n"
"apicast        apicast.127.0.0.1.nip.io                            apicast        proxy        edge          None\n"
"jaeger-query   jaeger-query-myproject.127.0.0.1.nip.io             jaeger-query   query-http   edge/Allow    None\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:162
#, no-wrap
msgid "In my case, the url is https://jaeger-query-myproject.127.0.0.1.nip.io\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:164
#, no-wrap
msgid "You should be greeted by this menacing looking gopher:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:166
#, no-wrap
msgid "![jaeger-ui](https://cdn-images-1.medium.com/max/800/1*ydyHdo_UrXILlcs49FamQg.png)\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:168
msgid "Now, let's create our own Jaeger configuration file:"
msgstr ""

#. type: Code fence info string
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:169
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:204
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:215
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:230
#, no-wrap
msgid "json"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:169
#, no-wrap
msgid ""
"cat <<EOF >jaeger_config.json\n"
" {\n"
"    \"service_name\": \"apicast\",\n"
"    \"disabled\": false,\n"
"    \"sampler\": {\n"
"      \"type\": \"const\",\n"
"      \"param\": 1\n"
"    },\n"
"    \"reporter\": {\n"
"      \"queueSize\": 100,\n"
"      \"bufferFlushInterval\": 10,\n"
"      \"logSpans\": false,\n"
"      \"localAgentHostPort\": \"jaeger-agent:6831\"\n"
"    },\n"
"    \"headers\": {\n"
"      \"jaegerDebugHeader\": \"debug-id\",\n"
"      \"jaegerBaggageHeader\": \"baggage\",\n"
"      \"TraceContextHeaderName\": \"uber-trace-id\",\n"
"      \"traceBaggageHeaderPrefix\": \"testctx-\"\n"
"    },\n"
"    \"baggage_restrictions\": {\n"
"        \"denyBaggageOnInitializationFailure\": false,\n"
"        \"hostPort\": \"127.0.0.1:5778\",\n"
"        \"refreshInterval\": 60\n"
"    }\n"
" }\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:199
#, no-wrap
msgid "This creates a new file: `jaeger_config.json`\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:201
msgid "Let's review the important bits:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:203
#, no-wrap
msgid "Sampler configuration:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:204
#, no-wrap
msgid ""
"\"sampler\": {\n"
"  \"type\": \"const\",\n"
"  \"param\": 1\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:212
#, no-wrap
msgid "This defines the sampler as [const]ant, with a param of \"1\", the means, it will sample all the requests.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:214
#, no-wrap
msgid "Reporter:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:215
#, no-wrap
msgid ""
"\"reporter\": {\n"
"  \"queueSize\": 100,\n"
"  \"bufferFlushInterval\": 10,\n"
"  \"logSpans\": false,\n"
"  \"localAgentHostPort\": \"jaeger-agent:6831\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:225
#, no-wrap
msgid "Max queue of 100 requests and flush interval of 10s, we are not outputting the spans to the log, and the agent host is expected to be running at \"jaeger-agent:6831\".\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:227
#, no-wrap
msgid "!! You will need to tune those values if your service is doing more than 100 requests in less than 10s, either increase the `queueSize`, or decrease the `bufferFlushInterval`.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:229
#, no-wrap
msgid "Headers:\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:230
#, no-wrap
msgid ""
"\"headers\": {\n"
"  \"jaegerDebugHeader\": \"debug-id\",\n"
"  \"jaegerBaggageHeader\": \"baggage\",\n"
"  \"TraceContextHeaderName\": \"uber-trace-id\",\n"
"  \"traceBaggageHeaderPrefix\": \"testctx-\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:240
#, no-wrap
msgid "The most important one for now, is the `TraceContextHeaderName`, we are going to use the default value of `uber-trace-id`. This is the HTTP header we need to forward in all our services to propagate the span information and be able to correlate them.\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:242
msgid "Let's create a ConfigMap from our jaeger configuration so we can mount it inside APIcast:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:243
#, no-wrap
msgid "oc create configmap jaeger-config --from-file=jaeger.json\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:248
msgid "Mount the ConfigMap into APIcast."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:249
#, no-wrap
msgid "oc volume dc/apicast --add -m /tmp/jaeger/ --configmap-name jaeger-config\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:254
#, no-wrap
msgid "This will trigger a redeployment of APIcast, now all the PODs will have our new configuration, available at `/tmp/jaeger/jaeger_config.json`.\n"
msgstr ""

#. type: Bullet: '* '
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:256
msgid "Let's enable OpenTracing and Jaeger with our custom configuration."
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:257
#, no-wrap
msgid "oc env deploymentConfig/apicast OPENTRACING_TRACER=jaeger OPENTRACING_CONFIG=/tmp/jaeger/jaeger_config.json\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:262
#, no-wrap
msgid "This will trigger the redeployment of APIcast, and we should go to our jaeger-UI to see if it's populating with APIcast data.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:265
#, no-wrap
msgid "![jaeger-ui-apicast](jaeger-apicast.png)\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:269
#, no-wrap
msgid "Current limitations"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:272
#, no-wrap
msgid "As you know, Openresty is Nginx + luaJIT, and right now, we only get OpenTracing information for the \"Nginx\" part of it, there aren't any OpenTracing libraries for lua.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:274
#, no-wrap
msgid "We are working on being able to use the OpenTracing C++ libraries from LUA, so we can create spans directly from it, and gain even more visibility into APIcast internals. For example, this could help debug if that custom policy you just installed is making things slowers.\n"
msgstr ""

#. type: Title ###
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:276
#, no-wrap
msgid "We are Hiring!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2018-06-17-adding-opentracing-support-to-apicast.md:278
#, no-wrap
msgid "If you are interested in this kind of projects, we are hiring! :)\n"
msgstr ""
